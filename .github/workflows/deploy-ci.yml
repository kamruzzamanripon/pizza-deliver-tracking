name: VpsDeployCI

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Create .env
        run: cp .env.example .env

      - name: Install composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Set Application Encryption Key
        run: php artisan key:generate --ansi

      - name: Create Storage Link
        run: php artisan storage:link

      - name: Run Migrations
        run: php artisan migrate --force

      - name: Install node Dependencies
        run: npm ci

      - name: Build Assets
        run: npm run build

      - name: Run Tests
        run: php artisan test

      - name: Deploy PHP to Server and test 21
        if: ${{ success() }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            cd /var/www/laravel-react-pizza-tracker
            git checkout main
            if git rev-parse -q --verify "refs/tags/${{ github.event.release.tag_name }}"; then
              git tag -d ${{ github.event.release.tag_name }}
            fi
            git fetch --all
            git checkout ${{ github.event.release.tag_name }}
            composer install
            npm ci
            npm run build
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan queue:restart
            php artisan reverb:restart

      # - name: Deploy PHP to Server
      #   run: |
      #     mkdir ~/.ssh 
      #     echo "$SSH_KEY" > ../private.key
      #     echo "$SSH_KNOWN_HOST" > ~/.ssh/known_hosts
      #     ssh -i $SSH_KEY_PATH $SSH_USERNAME@$SSH_HOST
      #     echo "test connection success" > ~/test.txt
      #   shell: bash
      #   env:
      #     SSH_KEY: ${{ secrets.SSH_KEY }}
      #     SSH_KNOWN_HOST: ${{ secrets.SSH_KNOWN_HOST }}
      #     SSH_KEY_PATH: ${{ github.workspace }}/../private.key
      #     SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      #     SSH_HOST: ${{ secrets.SSH_HOST }}
          
            
      

